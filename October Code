setwd("~/Documents/R_WorkingProjects/Resistomap_21")

library(plyr)
library(tidyverse)

# import raw dataset
rawdata <- read_csv("Raw CSV Files/rawdata.csv")

# remove unsatisfactory flags
flagsremoved <- rawdata[!grepl('CurveFitFail|MultipleMeltPeak|NoAmplification', rawdata$Flags),]

# check Ct column has no NAs
basedata <- subset(flagsremoved, Ct != "NA")

# create replicate and ID columns
basedata$Replicate = NA
basedata$ID = NA

# add replicate IDs
basedata <- mutate(basedata, Replicate = case_when(
  str_detect(Sample, "rep1") ~ "Rep1",
  str_detect(Sample, "rep2") ~ "Rep2",
  str_detect(Sample, "rep3") ~ "Rep3" ))

# add sample IDs (swapped ASP Distribution to be Sample 1 as it's the earliest stage)
basedata <- mutate(basedata, ID = case_when(
  str_detect(Sample, "1A") ~ "B_FeedPump",
  str_detect(Sample, "2A") ~ "C_Digester2",
  str_detect(Sample, "3A") ~ "D_Digester4" ,
  str_detect(Sample, "4A") ~ "E_CentrifugeIn",
  str_detect(Sample, "5A") ~ "F_NewDrySolid",
  str_detect(Sample, "6A") ~ "G_TWDrySolid",
  str_detect(Sample, "7A") ~ "A_ASPDist",
  str_detect(Sample, "8A") ~ "H_FSTDist"))

# remove only one replicate
solosremoved <- ddply(basedata, c("Assay", "ID"), function(d) {if (nrow(d) > 1) d else NULL})

# calculate means
means <- solosremoved %>% 
  group_by(Assay, ID) %>% 
  summarise_at(vars(Ct, Tm, Efficiency), list(mean = mean))

# pull "Assay" column out as a list.
Assays = dplyr::pull(means, Assay)

# remove Tm and Efficiency columns
Ct_only <- means
Ct_only$Tm_mean = NULL
Ct_only$Efficiency_mean = NULL

# create a wide table and transpose
wide_meanCt <- Ct_only %>% pivot_wider(names_from = ID, values_from = Ct_mean)
transposed_widemeanCt <- t(wide_meanCt[2:9])
transposed_widemeanCt[is.na(transposed_widemeanCt)] <- 0
# keeps numeric but we've lost assay codes

# make sure the top row is the Assay codes
assay_names <- t(wide_meanCt[1])
colnames(transposed_widemeanCt) <- as.character(assay_names[1,])

#DF_widemeanCt <- as.data.frame(transposed_widemeanCt)
#DF_widemeanCt_Assay <- rownames_to_column(DF_widemeanCt, var = "ID") %>%  head()
# this deletes bottom row...

# Calculate DCt and DDCt values.
DeltaCt <- transposed_widemeanCt[ , 2:187] - transposed_widemeanCt[ , "AY1"]
# DeltaCt[DeltaCt < 0] <- 0
DeltaDeltaCt <- DeltaCt[2:8,] - DeltaCt["A_ASPDist",]
# DeltaDeltaCt[DeltaDeltaCt == 0] <- NA
# commented out those lines because I can't work out why they're there...
DDCtPower <- 2^-(DeltaDeltaCt[1:7,])

# Pivot DDCt table longer, so Assays are a column.
DF_DDCTPower <- as.data.frame(DDCtPower)
rownames(DF_DDCTPower)

DF_Assay_DDCtPower <- rownames_to_column(DF_DDCTPower, var = "ID") %>%  head()
# rownames is giving row names as separate to the rest so is not including them in the column and effectively deleting it. 

"2DDCt_Long" <- DF_DDCt %>% 
  pivot_longer(everything(), names_to = "Assay", values_to = "x") %>% separate(x, into = c("a","b","c","d","e","f","g"), sep = "AY", convert = TRUE)

# import assay information
library(readr)
assayinformation <- read_csv("Raw CSV Files/assayinformation.csv")

# remove columns not needed
assayinformation$`Forward Primer` = NULL
assayinformation$`Reverse Primer` = NULL

# change column names for easier code
colnames(assayinformation) = c("Assay", "Gene", "Target_Antibiotic")
